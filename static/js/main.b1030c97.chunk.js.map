{"version":3,"sources":["components/Estimate.js","components/Info.js","components/ProgressBar.js","components/Nav.js","services/services.js","components/Settings.js","components/TaskForm.js","components/SingleTask.js","components/Tasks.js","components/Theme.js","components/Tracker.js","Styles.js","App.js","index.js"],"names":["Div","styled","div","Estimate","total","calculateEstimate","useState","est","setEst","useEffect","date","Date","setMinutes","getMinutes","string","getHours","Info","className","Line","color","ProgressBar","activeProgress","Nav","showSettings","onClick","initSettings","pomodoro","shortBreak","longBreak","longBreakAfter","autoBreak","autoPomodoro","darkMode","updateTasks","tasks","localStorage","setItem","JSON","stringify","updateSettings","settings","Settings","settingsProps","hideSettings","show","onSettingsChanged","state","setState","handleChange","e","prev","target","name","Number","value","handleCheckboxes","checked","console","log","classList","contains","htmlFor","type","id","toString","replace","onChange","min","tmp","TaskForm","handleForm","handleCancel","title","plannedSessions","input","setInput","counter","setCounter","inputRef","createRef","current","focus","ref","placeholder","max","SingleTaskContainer","SingleTask","task","handleTask","editing","setEditing","startEditing","findIndex","index","window","alert","tmpArr","confirm","splice","deleteTask","Tasks","setShow","handleShow","map","newTask","uuid","completed","dark","mainColor","trackerBg","mainOverlay","mainFg","trackerFg","mainTransparency","focusTransparency","mainTransition","mainRed","light","Theme","children","theme","Tracker","mode","pomodoroCount","ticking","mins","secs","displayTime","setDisplayTime","setInterval","tmpMode","clearInterval","createGlobalStyle","props","overlayFg","App","setSettings","setTasks","obj","parse","getItem","posts","getTasks","val","length","reduce","acc","curr","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1030c97.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Div = styled.div`\r\n  width: 100%;\r\n  padding: 1rem 0;\r\n\r\n  div {\r\n    padding: 1rem;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border-top: 2px solid #fff;\r\n  }\r\n\r\n  div span {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nfunction Estimate({ total, calculateEstimate }) {\r\n  const [est, setEst] = useState();\r\n\r\n  useEffect(() => {\r\n    const date = new Date();\r\n    date.setMinutes(date.getMinutes() + calculateEstimate());\r\n    const string = `${\r\n      date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`\r\n    }:${date.getMinutes() > 9 ? date.getMinutes() : `0${date.getMinutes()}`}`;\r\n    setEst(string);\r\n  }, [calculateEstimate]);\r\n\r\n  return (\r\n    <Div>\r\n      <div>\r\n        <span>Tasks: {total}</span>\r\n        <span>Task #: {total}</span>\r\n        <span>Finish at: {est}</span>\r\n      </div>\r\n    </Div>\r\n  );\r\n}\r\n\r\nexport default Estimate;\r\n","import React from \"react\";\r\n\r\nfunction Info() {\r\n  return (\r\n    <div className=\"info\">\r\n      <h1>Online Pomodoro timer to boost your productivity</h1>\r\n      <section>\r\n        <h2>What is Pomodoro Technique?</h2>\r\n        <p>\r\n          The Pomodoro Technique is created by Francesco Cirillo for a more\r\n          productive way to work and study. The technique uses a timer to break\r\n          down work into intervals, traditionally 25 minutes in length,\r\n          separated by short breaks. Each interval is known as a pomodoro, from\r\n          the Italian word for 'tomato', after the tomato-shaped kitchen timer\r\n          that Cirillo used as a university student\r\n        </p>\r\n      </section>\r\n      <section>\r\n        <h2>How to use it?</h2>\r\n        <ol>\r\n          <li>Add tasks to work on today</li>\r\n          <li>Set estimate pomdoros for each task</li>\r\n          <li>Select a task that you wanna work on</li>\r\n          <li>\r\n            Start Timer and focus for as many minutes as you have set for focus\r\n          </li>\r\n          <li>Take a break when focus time hits 00:00</li>\r\n          <li>Repeat it until you finish the task</li>\r\n        </ol>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Line = styled.div`\r\n  width: 100%;\r\n  height: 1.5px;\r\n  background: ${({ color }) => color};\r\n`;\r\n\r\nfunction ProgressBar({ activeProgress, color }) {\r\n  return <Line className=\"line\" color={color}></Line>;\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React from \"react\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport { AiTwotoneSetting } from \"react-icons/ai\";\r\n\r\nfunction Nav({ showSettings }) {\r\n  return (\r\n    <>\r\n      <nav>\r\n        <h3 className=\"brand\">Pomodoro</h3>\r\n        <div className=\"nav-buttons\">\r\n          <button className=\"btn set-btn\" onClick={showSettings}>\r\n            <AiTwotoneSetting />\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      <ProgressBar color=\"#333\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","const initSettings = {\r\n  pomodoro: 25,\r\n  shortBreak: 5,\r\n  longBreak: 15,\r\n  longBreakAfter: 4,\r\n  autoBreak: true,\r\n  autoPomodoro: true,\r\n  darkMode: false,\r\n};\r\n\r\nfunction getTasks() {\r\n  const posts = localStorage.getItem(\"pomodoro-tasks\");\r\n  if (!posts) {\r\n    return [];\r\n  }\r\n  return JSON.parse(posts);\r\n}\r\n\r\nfunction updateTasks(tasks) {\r\n  localStorage.setItem(\"pomodoro-tasks\", JSON.stringify(tasks));\r\n}\r\n\r\nfunction getSettings() {\r\n  const settings = JSON.parse(localStorage.getItem(\"pomodoro-settings\"));\r\n  if (!settings) {\r\n    updateSettings(initSettings);\r\n    return initSettings;\r\n  }\r\n  return settings;\r\n}\r\n\r\nfunction updateSettings(settings) {\r\n  localStorage.setItem(\"pomodoro-settings\", JSON.stringify(settings));\r\n}\r\n\r\nexport { getTasks, updateTasks, updateSettings, getSettings };\r\n","import React, { useState } from \"react\";\r\nimport { updateSettings } from \"../services/services\";\r\n\r\nfunction Settings({ settingsProps }) {\r\n  const { settings, hideSettings, show, onSettingsChanged } = settingsProps;\r\n\r\n  const [state, setState] = useState({ ...settings });\r\n\r\n  const handleChange = (e) => {\r\n    setState((prev) => ({ ...prev, [e.target.name]: Number(e.target.value) }));\r\n  };\r\n\r\n  const handleCheckboxes = (e) => {\r\n    setState((prev) => ({ ...prev, [e.target.name]: e.target.checked }));\r\n    console.log(state);\r\n  };\r\n\r\n  const saveAndLeave = () => {\r\n    const tmp = { ...state };\r\n    onSettingsChanged(tmp);\r\n    updateSettings(tmp);\r\n    hideSettings();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        show ? \"settings-container show-settings\" : \"settings-container\"\r\n      }\r\n      onClick={(e) =>\r\n        e.target.classList.contains(\"settings-container\") && hideSettings()\r\n      }\r\n    >\r\n      <div className=\"settings\">\r\n        <div className=\"setting-header\">\r\n          <h1 className=\"off-white\">Timer</h1>\r\n          <div className=\"X btn\" onClick={hideSettings}>\r\n            X\r\n          </div>\r\n        </div>\r\n        <div className=\"timers-container\"></div>\r\n        <hr />\r\n        <h2>Time (minutes)</h2>\r\n        <div className=\"timers\">\r\n          <div className=\"timer\">\r\n            <label htmlFor=\"pomodoro\" className=\"off-white\">\r\n              Pomodoro\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"pomodoro\"\r\n              name=\"pomodoro\"\r\n              value={state.pomodoro.toString().replace(/^0+/, \"\")}\r\n              onChange={handleChange}\r\n              min=\"1\"\r\n            />\r\n          </div>\r\n          <div className=\"timer\">\r\n            <label htmlFor=\"break\" className=\"off-white\">\r\n              Break\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"break\"\r\n              name=\"shortBreak\"\r\n              value={state.shortBreak.toString().replace(/^0+/, \"\")}\r\n              onChange={handleChange}\r\n              min=\"1\"\r\n            />\r\n          </div>\r\n          <div className=\"timer\">\r\n            <label htmlFor=\"long-break\" className=\"off-white\">\r\n              Long Break\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"long-break\"\r\n              name=\"longBreak\"\r\n              value={state.longBreak.toString().replace(/^0+/, \"\")}\r\n              onChange={handleChange}\r\n              min=\"1\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"setting-component\">\r\n          <p>Auto start Pomodoro?</p>\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={state.autoPomodoro}\r\n              value={state.autoPomodoro}\r\n              onChange={handleCheckboxes}\r\n              name=\"autoPomodoro\"\r\n            />\r\n            <span className=\"slider round\"></span>\r\n          </label>\r\n        </div>\r\n        <hr />\r\n        <div className=\"setting-component\">\r\n          <p>Auto start Breaks?</p>\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={state.autoBreak}\r\n              value={state.autoBreak}\r\n              onChange={handleCheckboxes}\r\n              name=\"autoBreak\"\r\n            />\r\n            <span className=\"slider round\"></span>\r\n          </label>\r\n        </div>\r\n        <hr />\r\n        <div className=\"setting-component\">\r\n          <p>\r\n            <label htmlFor=\"longBreakAfter\">Long Break Intervals</label>\r\n          </p>\r\n          <div>\r\n            <input\r\n              type=\"number\"\r\n              id=\"longBreakAfter\"\r\n              value={state.longBreakAfter.toString().replace(/^0+/, \"\")}\r\n              name=\"longBreakAfter\"\r\n              min=\"1\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"setting-component\">\r\n          <p>Dark Mode</p>\r\n          <label className=\"switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={state.darkMode}\r\n              value={state.darkMode}\r\n              onChange={handleCheckboxes}\r\n              name=\"darkMode\"\r\n            />\r\n            <span className=\"slider round\"></span>\r\n          </label>\r\n        </div>\r\n        <button className=\"btn btn-xxl\" onClick={saveAndLeave}>\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","import React, { useEffect, createRef, useState } from \"react\";\r\n\r\nfunction TaskForm({ handleForm, handleCancel, title, plannedSessions }) {\r\n  const [input, setInput] = useState(title);\r\n  const [counter, setCounter] = useState(plannedSessions);\r\n  let inputRef = createRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"task-form\">\r\n      <div className=\"form show-form\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"task-title\"\r\n          name=\"inputValue\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          ref={inputRef}\r\n          placeholder=\"What are you working on?\"\r\n        />\r\n        <label htmlFor=\"task-number\">Planned sections:</label>\r\n        <br />\r\n        <input\r\n          type=\"number\"\r\n          className=\"task-number\"\r\n          value={counter.toString().replace(/^0+/, \"\")}\r\n          onChange={(e) => setCounter(e.target.value)}\r\n          min=\"0\"\r\n          max=\"20\"\r\n          id=\"task-number\"\r\n        />\r\n        <button\r\n          className=\"number-counter btn\"\r\n          onClick={() => setCounter((prev) => prev + 1)}\r\n        >\r\n          &#x21E7;\r\n        </button>\r\n        <button\r\n          className=\"number-counter btn\"\r\n          onClick={() => setCounter((prev) => prev - 1)}\r\n        >\r\n          &#x21E9;\r\n        </button>\r\n        <div className=\"task-footer\">\r\n          <button className=\"btn\" onClick={() => handleCancel(false)}>\r\n            Cancel\r\n          </button>\r\n          <button\r\n            className={\r\n              input && counter ? \"btn save success\" : \"btn save active\"\r\n            }\r\n            onClick={() => handleForm(input, counter)}\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaCheckCircle, FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport { updateTasks } from \"../services/services\";\r\n\r\nconst SingleTaskContainer = styled.div`\r\n  margin: 0.3rem 0;\r\n\r\n  .single-task {\r\n    width: 100%;\r\n    padding: 0.3rem;\r\n    border-left: 3px solid #000;\r\n    border-radius: 4px;\r\n    font-size: 1.2rem;\r\n    background: #f4f4f4;\r\n    color: #000;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0.5rem 0;\r\n  }\r\n\r\n  .single-task div {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  span {\r\n    display: inline-block;\r\n    margin: 0.4rem;\r\n  }\r\n\r\n  .icon,\r\n  .check {\r\n    color: rgba(0, 0, 0, 0.5);\r\n    font-size: 1.2rem;\r\n    position: relative;\r\n  }\r\n\r\n  .check {\r\n    font-size: 1.8rem;\r\n  }\r\n\r\n  .btn-cover {\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nfunction SingleTask({ tasks, task, handleTask }) {\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const startEditing = (id) => {\r\n    setEditing(true);\r\n    return tasks.findIndex((task) => task.id === id);\r\n  };\r\n\r\n  const editTask = (title, counter) => {\r\n    const index = startEditing(task.id);\r\n    const tmp = tasks[index];\r\n    tmp.title = title;\r\n    tmp.plannedSessions = counter;\r\n    if (!tmp.title && !title.plannedSessions) {\r\n      return window.alert(\"Fields must not be empty\");\r\n    }\r\n    const tmpArr = [...tasks];\r\n    tmpArr[index] = tmp;\r\n    setEditing(false);\r\n    handleTask(tmpArr);\r\n    updateTasks(tmpArr);\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    const index = tasks.findIndex((task) => task.id === id);\r\n    if (\r\n      !window.confirm(`Are you sure you want to delete ${tasks[index].title}?`)\r\n    ) {\r\n      return;\r\n    }\r\n    const tmp = tasks;\r\n    tmp.splice(index, 1);\r\n    updateTasks(tmp);\r\n    return handleTask(tmp);\r\n  };\r\n\r\n  if (editing) {\r\n    return (\r\n      <TaskForm\r\n        handleForm={editTask}\r\n        handleCancel={() => setEditing(false)}\r\n        title={task.title}\r\n        plannedSessions={task.plannedSessions}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SingleTaskContainer>\r\n      <div className=\"single-task\" key={task.id}>\r\n        <div>\r\n          <span className=\"check\">\r\n            <FaCheckCircle />\r\n          </span>\r\n          <span>{task.title}</span>\r\n        </div>\r\n        <div>\r\n          <span>0/{`${task.plannedSessions}`}</span>\r\n          <span className=\"icon\" onClick={() => startEditing(task.id)}>\r\n            <FaEdit />\r\n            <span className=\"btn-cover\"></span>\r\n          </span>\r\n          <span className=\"icon\" onClick={() => deleteTask(task.id)}>\r\n            <FaTrash />\r\n            <span className=\"btn-cover\"></span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </SingleTaskContainer>\r\n  );\r\n}\r\n\r\nexport default SingleTask;\r\n","import React, { useState } from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport SingleTask from \"./SingleTask\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport { updateTasks } from \"../services/services\";\r\n\r\nfunction Tasks({ tasks, handleTask }) {\r\n  const [show, setShow] = useState(false);\r\n  const handleShow = (value) => setShow(value);\r\n\r\n  const addTask = (input, counter) => {\r\n    if (!input || !counter) {\r\n      window.alert(\"Fields must not be empty\");\r\n      return;\r\n    }\r\n    const newTask = {\r\n      id: uuid(),\r\n      title: input,\r\n      completed: false,\r\n      date: new Date(),\r\n      plannedSessions: counter,\r\n    };\r\n    handleShow(false);\r\n    handleTask([...tasks, newTask]);\r\n    updateTasks([...tasks, newTask]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"tasks-header\">\r\n        <h3>Tasks</h3>\r\n        <button className=\"options btn\">\r\n          <span className=\"dot\"></span>\r\n        </button>\r\n      </div>\r\n      <div className=\"tasks-list\"></div>\r\n      <ProgressBar color=\"#ccc\" />\r\n      {tasks.map((task) => (\r\n        <SingleTask\r\n          task={task}\r\n          key={task.id}\r\n          tasks={tasks}\r\n          handleTask={handleTask}\r\n        />\r\n      ))}\r\n      {show && (\r\n        <TaskForm\r\n          handleCancel={handleShow}\r\n          handleForm={addTask}\r\n          title=\"\"\r\n          plannedSessions={0}\r\n        />\r\n      )}\r\n      <button\r\n        className={!show ? \"btn task-btn\" : \"hide-task\"}\r\n        onClick={() => setShow(true)}\r\n      >\r\n        <span>+</span> Add Task\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nconst dark = {\r\n  mainColor: \"#121212\",\r\n  trackerBg: \"#181818\",\r\n  mainOverlay: \"#222\",\r\n  mainFg: \"#f4f4f4\",\r\n  trackerFg: \"#f4f4f4\",\r\n  mainTransparency: \"rgba(255, 255, 255, 0.1)\",\r\n  focusTransparency: \"rgba(0, 0, 0, 0.2)\",\r\n  shortBreak: \"rgba(76, 145, 149)\",\r\n  longBreak: \"rgb(69, 214, 163)\",\r\n  mainTransition: \"all .3s\",\r\n  mainRed: \"#d95550\",\r\n};\r\n\r\nconst light = {\r\n  mainColor: \"#fff\",\r\n  trackerBg: \"#d95550\",\r\n  mainOverlay: \"#fff\",\r\n  mainFg: \"#000\",\r\n  trackerFg: \"#f4f4f4\",\r\n  mainTransparency: \"rgba(255, 255, 255, 0.1)\",\r\n  focusTransparency: \"rgba(0, 0, 0, 0.2)\",\r\n  shortBreak: \"rgba(76, 145, 149)\",\r\n  longBreak: \"rgb(69, 214, 163)\",\r\n  mainTransition: \"all .3s\",\r\n  mainRed: \"#d95550\",\r\n};\r\n\r\nfunction Theme({ darkMode, children }) {\r\n  return (\r\n    <ThemeProvider theme={darkMode ? dark : light}>{children}</ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Theme;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Tracker({ settings }) {\r\n  const [state, setState] = useState({\r\n    mode: \"pomodoro\",\r\n    pomodoroCount: 1,\r\n    ticking: false,\r\n  });\r\n\r\n  let { mode } = state;\r\n\r\n  const [displayTime, setDisplayTime] = useState({\r\n    mins: 0,\r\n    secs: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const { mins, secs } = displayTime;\r\n    const startTimer = () => {\r\n      if (mins === 0 && secs === 0) {\r\n        if (state.mode === \"pomodoro\") {\r\n          let tmpMode;\r\n          if (state.pomodoroCount === settings.longBreakAfter) {\r\n            tmpMode = \"longBreak\";\r\n          } else {\r\n            tmpMode = \"shortBreak\";\r\n          }\r\n          const pomodoroCount =\r\n            state.pomodoroCount === settings.longBreakAfter\r\n              ? 1\r\n              : state.pomodoroCount + 1;\r\n          setState((prev) => ({ ...prev, mode: tmpMode, pomodoroCount }));\r\n        } else {\r\n          setState((prev) => ({ ...prev, mode: \"pomodoro\" }));\r\n        }\r\n      } else if (secs === 0) {\r\n        setDisplayTime({ mins: mins - 1, secs: 59 });\r\n      } else {\r\n        setDisplayTime({ mins, secs: secs - 1 });\r\n      }\r\n    };\r\n    let id;\r\n    if (state.ticking) {\r\n      id = setInterval(startTimer, 1000);\r\n    }\r\n    return () => clearInterval(id);\r\n  }, [settings, displayTime, settings.longBreakAfter, state]);\r\n\r\n  useEffect(() => {\r\n    console.log(mode);\r\n    setDisplayTime({ mins: settings[mode], secs: 0 });\r\n  }, [mode, settings]);\r\n\r\n  return (\r\n    <div className=\"tracker\">\r\n      <div className=\"modes\">\r\n        <button\r\n          className={mode === \"pomodoro\" ? \"btn mode active\" : \"btn mode\"}\r\n        >\r\n          Focus\r\n        </button>\r\n        <button\r\n          className={mode === \"shortBreak\" ? \"btn mode active\" : \"btn mode\"}\r\n        >\r\n          Break\r\n        </button>\r\n        <button\r\n          className={mode === \"longBreak\" ? \"btn mode active\" : \"btn mode\"}\r\n        >\r\n          Long Break\r\n        </button>\r\n      </div>\r\n      <div className=\"tracker-timer\">\r\n        <span>\r\n          {displayTime.mins > 9\r\n            ? `${displayTime.mins}`\r\n            : `0${displayTime.mins}`}\r\n        </span>\r\n        :\r\n        <span>\r\n          {displayTime.secs > 9\r\n            ? `${displayTime.secs}`\r\n            : `0${displayTime.secs}`}\r\n        </span>\r\n      </div>\r\n      <div className=\"tracker-buttons\">\r\n        <button\r\n          className=\"btn timer-btn\"\r\n          onClick={() =>\r\n            setState((prev) => ({ ...prev, ticking: !prev.ticking }))\r\n          }\r\n        >\r\n          {state.ticking ? \"Stop\" : \"Start\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tracker;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n\r\n  body {\r\n    font-size: 1.1rem;\r\n    background: ${(props) => props.theme.mainColor};\r\n    color: ${(props) => props.theme.mainFg}\r\n  }\r\n  \r\n  .off-white {\r\n    color: #bbb;\r\n  }\r\n  \r\n  .bg-off-white {\r\n    background: #rgba(0, 0, 0, 0.5);\r\n  }\r\n  \r\n  .btn {\r\n    color: inherit;\r\n    border: none;\r\n    background: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .set-btn {\r\n    font-size: 1.5rem;\r\n    background: ${(props) => props.theme.mainTransparency};\r\n    padding: 0.2rem;\r\n    display: flex;\r\n  }\r\n  \r\n  .btn-xxl {\r\n    display: block;\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n  \r\n  .active {\r\n    background: ${(props) => props.theme.focusTransparency} !important;\r\n  }\r\n  \r\n  .text-center {\r\n    text-align: center;\r\n  }\r\n  \r\n  /* Nav section starts */\r\n  \r\n  .settings-container {\r\n    position: fixed;\r\n    overflow: scroll;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    top: 0;\r\n    left: 0;\r\n    background: rgba(0, 0, 0, 0.4);\r\n    z-index: 1000;\r\n    transform: scale(0, 0);\r\n    transform-origin: right top;\r\n    transition: ${(props) => props.theme.mainTransition};\r\n  }\r\n  \r\n  .show-settings {\r\n    transform: scale(1, 1);\r\n  }\r\n  \r\n  .settings {\r\n    width: 80%;\r\n    margin: 2rem auto;\r\n    padding: 0.5rem;\r\n    background: ${(props) => props.theme.mainOverlay};\r\n    color: ${(props) => props.theme.mainFg};  }\r\n  \r\n  .setting-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0.5rem 0;\r\n    margin: 0.5rem 0;\r\n  }\r\n  \r\n  .timers {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .timer input {\r\n    width: 80%;\r\n    display: block;\r\n    padding: 0.5rem 0.3rem;\r\n    background: ${(props) => props.theme.mainTransparency};\r\n    color: inherit;\r\n    border: none;\r\n  }\r\n  \r\n  .switch {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 25px;\r\n  }\r\n  \r\n  .switch input {\r\n    opacity: 0;\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n  .slider {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #ccc;\r\n    -webkit-transition: 0.4s;\r\n    transition: 0.4s;\r\n  }\r\n  \r\n  .slider:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 17px;\r\n    width: 17px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    background-color: white;\r\n    -webkit-transition: 0.4s;\r\n    transition: 0.4s;\r\n  }\r\n  \r\n  input:checked + .slider {\r\n    background-color: #2196f3;\r\n  }\r\n  \r\n  input:focus + .slider {\r\n    box-shadow: 0 0 1px #2196f3;\r\n  }\r\n  \r\n  input:checked + .slider:before {\r\n    -webkit-transform: translateX(26px);\r\n    -ms-transform: translateX(26px);\r\n    transform: translateX(26px);\r\n  }\r\n  \r\n  /* Rounded sliders */\r\n  .slider.round {\r\n    border-radius: 34px;\r\n  }\r\n  \r\n  .slider.round:before {\r\n    border-radius: 50%;\r\n  }\r\n  \r\n  .setting-component {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 1rem 0;\r\n  }\r\n\r\n  .setting-component input {\r\n    width: 4rem;\r\n    height: 1rem;\r\n    padding: 1rem 0.4rem;\r\n    background: ${(props) => props.theme.mainTransparency};\r\n    color: inherit;\r\n    border: none;\r\n  }\r\n  \r\n  .settings button {\r\n    margin: 1rem 0 0;\r\n    padding: 1rem;\r\n    background: green;\r\n    color: #fff;\r\n  }\r\n  \r\n  .main-container {\r\n    width: 100%;\r\n    padding: 0 0.5rem;\r\n    background: ${(props) => props.theme.trackerBg};\r\n    color: ${(props) => props.theme.trackerFg};\r\n    min-height: 100vh;\r\n  }\r\n  \r\n  .break {\r\n    background: ${(props) => props.theme.shortBreak};\r\n  }\r\n\r\n  .long-break {\r\n    background: ${(props) => props.theme.longBreak};\r\n  }\r\n  \r\n  .success {\r\n    background: green;\r\n    border-radius: 5px;\r\n    color: #fff !important;\r\n  }\r\n  \r\n  nav {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    min-height: 60px;\r\n  }\r\n  \r\n  .tracker-container {\r\n    max-width: 468px;\r\n    margin: auto;\r\n  }\r\n  \r\n  .tracker {\r\n    width: 100%;\r\n    min-height: 30vh;\r\n    padding: 0.5rem;\r\n    margin: 1rem 0;\r\n    text-align: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: ${(props) => props.theme.mainTransparency};\r\n  }\r\n  \r\n  .modes {\r\n    width: 80%;\r\n    margin: 0.5rem auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  .modes .mode {\r\n    padding: 0.2rem;\r\n    font-size: 1.2rem;\r\n  }\r\n  \r\n  .tracker-timer {\r\n    font-size: 7rem;\r\n    margin: 0.5rem 0;\r\n    font-family: \"Varela Round\";\r\n  }\r\n  \r\n  .timer-btn {\r\n    font-size: 1.3rem;\r\n    background: ${(props) => props.theme.mainTransparency};\r\n    padding: 1rem;\r\n    width: 100%;\r\n    margin: 0.5rem auto;\r\n  }\r\n  \r\n  .task-form {\r\n    position: relative;\r\n    width: 100%;\r\n    padding: 0.5rem 0;\r\n  }\r\n  \r\n  .task-btn {\r\n    display: block;\r\n    opacity: 0.7;\r\n    font-size: 1.3rem;\r\n    width: 100%;\r\n    margin: 0.5rem 0;\r\n    color: ${(props) => props.theme.overlayFg};\r\n    background: ${(props) => props.theme.mainTransparency};\r\n    padding: 1rem;\r\n    border: 1px dashed ${(props) => props.theme.overlayFg};\r\n    transition: ${(props) => props.theme.mainTransition};\r\n  }\r\n  \r\n  .hide-task {\r\n    display: none;\r\n  }\r\n  \r\n  .task-btn:hover,\r\n  .task-btn:focus {\r\n    opacity: 1;\r\n  }\r\n  \r\n  .task-btn span {\r\n    display: inline-block;\r\n    margin-right: 0.3rem;\r\n    height: 1.5rem;\r\n    width: 1.5rem;\r\n    background: ${(props) => props.theme.mainTransition};\r\n    border-radius: 50%;\r\n  }\r\n  \r\n  .form {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    background: #f4f4f4;\r\n    color: #000;\r\n    border-radius: 5px;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 2;\r\n    transform: scale(0, 0);\r\n    transform-origin: center;\r\n    transition: ${(props) => props.theme.mainTransition};\r\n  }\r\n  \r\n  .show-form {\r\n    transform: scale(1, 1);\r\n  }\r\n  \r\n  .task-title {\r\n    display: block;\r\n    width: 100%;\r\n    font-size: 1.3rem;\r\n    padding: 0.75rem 0;\r\n    outline: none;\r\n  }\r\n  \r\n  .form input {\r\n    margin: 1rem 0;\r\n    border: none;\r\n    background: none;\r\n  }\r\n  \r\n  .form .task-number {\r\n    background: #e4e4e4;\r\n    font-size: 1.2rem;\r\n    padding: 0.5rem;\r\n    width: 5rem;\r\n    height: 3rem;\r\n  }\r\n  \r\n  .number-counter {\r\n    display: inline-block;\r\n    margin: 0 0.2rem;\r\n    padding: 0.5rem;\r\n    font-size: 1.2rem;\r\n    border: 1px solid #ccc;\r\n  }\r\n  \r\n  .task-footer {\r\n    text-align: right;\r\n    padding: 0.3rem;\r\n    background: #e4e4e4;\r\n    width: 100%;\r\n  }\r\n  \r\n  .task-footer button {\r\n    padding: 0.75rem;\r\n    margin: 0 1rem;\r\n    color: inherit;\r\n  }\r\n  \r\n  .active {\r\n    background: #000;\r\n    border-radius: 5px;\r\n    color: #fff;\r\n  }\r\n  \r\n  /* Tasks section starts */\r\n  \r\n  .tasks-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 1rem 0;\r\n  }\r\n  \r\n  .options {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 2rem;\r\n    background: ${(props) => props.theme.mainTransparency};\r\n    width: 2rem;\r\n  }\r\n  \r\n  .dot,\r\n  .dot::after,\r\n  .dot::before {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 4px;\r\n    height: 4px;\r\n    background: #f4f4f4;\r\n  }\r\n  \r\n  .dot::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 8px;\r\n    left: 0;\r\n  }\r\n  \r\n  .dot::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: 8px;\r\n    left: 0;\r\n  }\r\n  \r\n  .info {\r\n    width: 95%;\r\n    margin: 1rem auto;\r\n  }\r\n  \r\n  .info section {\r\n    margin: 1rem 0;\r\n  }\r\n  \r\n  .info section h1,\r\n  .info section h2 {\r\n    position: relative;\r\n    padding: 1rem 0;\r\n    margin: 1rem 0;\r\n  }\r\n  \r\n  .info section h1::after,\r\n  .info section h2::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 5vw;\r\n    height: 0.3rem;\r\n    bottom: 0;\r\n    left: 0;\r\n    background: ${(props) => props.theme.mainRed};\r\n  }\r\n  \r\n  ol {\r\n    padding: 0 1rem;\r\n  }\r\n  \r\n  @media screen and (min-width: 768px) {\r\n    .container {\r\n      width: 50%;\r\n      margin: auto;\r\n    }\r\n  \r\n    .settings-container {\r\n      transform-origin: center;\r\n    }\r\n  \r\n    .info {\r\n      width: 50%;\r\n      margin: 1rem auto;\r\n    }\r\n  }  \r\n`;\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Estimate from \"./components/Estimate\";\nimport Info from \"./components/Info\";\nimport Nav from \"./components/Nav\";\nimport Settings from \"./components/Settings\";\nimport Tasks from \"./components/Tasks\";\nimport Theme from \"./components/Theme\";\nimport Tracker from \"./components/Tracker\";\nimport { getTasks, getSettings } from \"./services/services\";\nimport GlobalStyles from \"./Styles\";\n\nfunction App() {\n  const [show, setShow] = useState(false);\n\n  const [settings, setSettings] = useState();\n\n  const [tasks, setTasks] = useState();\n\n  const calculateEstimate = () => {\n    const plannedSessions = tasks.reduce(\n      (acc, curr) => (acc += Number(curr.plannedSessions)),\n      0\n    );\n    let total = plannedSessions * settings.pomodoro;\n    for (let i = 0; i < plannedSessions; i++) {\n      if (settings.longBreakAfter % i) {\n        total += settings.longBreak;\n      } else {\n        total += settings.shortBreak;\n      }\n    }\n    return total;\n  };\n\n  const handleTask = (val) => {\n    setTasks([...val]);\n  };\n\n  const onSettingsChanged = (obj) => {\n    setSettings({ ...obj });\n  };\n\n  const showSettings = () => setShow(true);\n  const hideSettings = () => setShow(false);\n\n  useEffect(() => {\n    setSettings(getSettings());\n    setTasks(getTasks());\n  }, []);\n  if (!settings && !tasks) {\n    return <div>Loading</div>;\n  }\n  return (\n    <>\n      <Theme darkMode={settings.darkMode}>\n        <GlobalStyles />\n        <Settings\n          settingsProps={{\n            show,\n            hideSettings,\n            settings,\n            onSettingsChanged,\n          }}\n        />\n        <main className=\"main-container\">\n          <div className=\"container\">\n            <Nav showSettings={showSettings} />\n            <div className=\"tracker-container\">\n              <Tracker\n                settings={settings}\n                onSettingsChanged={onSettingsChanged}\n              />\n              <Tasks tasks={tasks} handleTask={handleTask} />\n              {tasks.length > 0 && (\n                <Estimate\n                  calculateEstimate={calculateEstimate}\n                  total={tasks.length}\n                />\n              )}\n            </div>\n          </div>\n        </main>\n        <Info />\n      </Theme>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}